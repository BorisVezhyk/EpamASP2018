@model InfoPortal.WebUI.Models.UpdateArticleModelView

@{
	ViewBag.Title = "UpdateArticle";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-md-12 col-lg-12 py-3">

	<h2>UpdateArticle</h2>

	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()

		<div class="">
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group row">
				@Html.LabelFor(model => model.Caption, htmlAttributes: new { @class = "col-form-label col-md-2" })
				<div class="col-sm-10">
					@Html.EditorFor(model => model.Caption, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Caption, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group row">
				@Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "col-form-label col-md-2" })
				<div class="col-sm-10">
					@Html.EditorFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group row">
				@Html.LabelFor(model => model.Video, htmlAttributes: new { @class = "col-form-label col-md-2" })
				<div class="col-sm-10">
					@Html.EditorFor(model => model.Video, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Video, "", new { @class = "text-danger" })
					<small id="videoHelp" class="form-text text-muted">Need link</small>
				</div>
			</div>

			<div class="form-group row">
				@Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "col-form-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
					<small id="imageHelp" class="form-text text-muted">Need link</small>
				</div>
			</div>

			<div class="form-group row">
				@Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "col-form-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
					<small id="tagHelp" class="form-text text-muted">You can write a few words separated by commas</small>
				</div>
			</div>

			<div class="form-group row">
				@Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "col-form-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownListFor(model=>model.CategoryId,
						new SelectList(Model.Categories,"Value","Text"),htmlAttributes: new{@class= "form-control" })
					@Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group row">
				@Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "col-form-label col-md-2" })
				<div class="col-md-10">
					@Html.TextAreaFor(model => model.Text, new { @class = "form-control", rows = "10" })
					@Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group row">
				@Html.LabelFor(model => model.ArticleId, htmlAttributes: new { @class = "col-form-label col-md-2", hidden = true })
				<div class="col-md-10">
					@Html.EditorFor(model => model.ArticleId, new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.ArticleId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-10">
					<input type="submit" value="Save" class="btn btn-default" />
				</div>
			</div>
		</div>
	}

	<div class="container">
		@Html.ActionLink("Back", null, null, null, new { href = Request.UrlReferrer, @class = "btn btn-secondary" })
	</div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
